openapi: 3.0.3
info:
  title: Jasad API
  version: 1.0.0
  description: API for managing users, exercises, and workout sessions.
servers:
  - url: /api/v1
paths:
  /users/signup:
    post:
      summary: Sign up a new user
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request
        '409':
          description: Conflict, (username already used)

  /users/signin:
    post:
      summary: Sign in a user
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: User signed in successfully
        '401':
          description: Unauthorized

  /users/{user}/info:
    get:
      summary: Get user information
      operationId: getUserInfo
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User information retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: User not found

  /exercises:
    post:
      summary: Create a new exercise
      operationId: createExercise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exerciseName:
                  type: string
                exerciseDescription:
                  type: string
                referenceVideo:
                  type: string
                muscles:
                  type: array
                  items: 
                    type: object
                    properties:
                      muscleName:
                        type: string
                      muscleGroup:
                        type: string
              required:
                - exerciseName
                - exerciseDescription
                - referenceVideo
                - muscles
      responses:
        '201':
          description: Exercise created successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
    get:
      summary: Get all exercises
      operationId: getExercises
      responses:
        '200':
          description: List of exercises retrieved successfully
        '404':
          description: Exercises not found

  /exercises/muscle/{muscleGroup}/{muscleName}:
    get:
      summary: Get exercises by muscle group and name
      operationId: getExercisesByMuscle
      parameters:
        - name: muscleGroup
          in: path
          required: true
          schema:
            type: string
        - name: muscleName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exercises retrieved successfully
        '404':
          description: Exercises not found

  /exercises/id/{id}:
    get:
      summary: Get exercise by ID
      operationId: getExerciseByID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exercise retrieved successfully
        '404':
          description: Exercise not found

  /exercises/name/{name}:
    get:
      summary: Get exercise by name
      operationId: getExerciseByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exercise retrieved successfully
        '404':
          description: Exercise not found


  /exercises/{id}:
    put:
      summary: Update an exercise
      operationId: updateExercise
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exerciseName:
                  type: string
                exerciseDescription:
                  type: string
                referenceVideo:
                  type: string
                muscles:
                  type: array
                  items:
                    type: object
                    properties:
                      muscleName:
                        type: string
                      muscleGroup:
                        type: string
              required:
                - exerciseName
                - exerciseDescription
                - referenceVideo
                - muscles
      responses:
        '200':
          description: Exercise updated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Exercise not found

    delete:
      summary: Delete an exercise
      operationId: deleteExercise
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Exercise deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Exercise not found

  /users/{user}/workouts:
    get:
      summary: Get all workouts for a user
      operationId: getWorkouts
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workouts retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: Workouts not found

  /users/{user}/workouts/new:
    get:
      summary: Get the form for creating a new workout
      operationId: createWorkoutForm
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Form retrieved successfully
        '401':
          description: Unauthorized

    post:
      summary: Create a new workout
      operationId: createWorkout
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                workouts:
                  type: array
                  items:
                    type: object
                    properties:
                      exerciseID:
                        type: string
                      reps:
                        type: integer
                      sets:
                        type: integer
                      weights:
                        type: number
      responses:
        '201':
          description: Workout created successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /users/{user}/workouts/{workout}:
    get:
      summary: Get a specific workout for a user
      operationId: getWorkout
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: workout
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workout retrieved successfully
        '401':
          description: Unauthorized
        '404':
          description: Workout not found

    put:
      summary: Update a specific workout for a user
      operationId: updateWorkout
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: workout
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                workouts:
                  type: array
                  items:
                    type: object
                    properties:
                      exerciseID:
                        type: string
                      reps:
                        type: integer
                      sets:
                        type: integer
                      weights:
                        type: number
      responses:
        '200':
          description: Workout updated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Workout not found

    delete:
      summary: Delete a specific workout for a user
      operationId: deleteWorkout
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: workout
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Workout deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Workout not found

